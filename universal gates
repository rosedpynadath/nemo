
#!/ usr/bin/env python

import click
import os
main()

@click.command()
@click.option('nand',type = (bool))
@click.option('nor', type = bool))
def gates(nand, nor):
    if nand and not nor:
        na = NandGate(nand[0],nand[1]).logic()
        print(na)
    elif nor and not nand:
        no = NorGate(nor).logic()
        print(no)
class Gate(object):
    """ class representing a gate. It can be any gate. """

    def __init__(self, *args):
        """ initialise the class """
        self.input = args
        self.output = None

    def logic(self):
        """ the intelligence to be performed """
        raise NotImplementedError

class AndGate(Gate):
    """ class representing AND gate """

    def logic(self):
        self.output = self.input[0] and self.input[1]
        return self.output

class OrGate(Gate):
    """ class representing OR gate """

    def logic(self):
        self.output = self.input[0] and self.input[1]
        return self.output
class NotGate(Gate):
    """ class representing NOT gate """

    def logic(self):
        self.output = not self.input[0]
        return self.output
class NandGate(AndGate,NotGate):
    #class representing Nand Gate
    
   def logic(self):
       self.temp = super(NandGate,self).logic()
       Gate.__init__(self,self.temp)
       self.output = NotGate.logic(self)
       return self.output

class NorGate(AndGate,NotGate):
    #class representing Nor Gate
    
   def logic(self):
       self.temp = super(NorGate,self).logic()
       Gate.__init__(self,self.temp)
       self.output = NotGate.logic(self)
       return self.output












       		
       

	


    
